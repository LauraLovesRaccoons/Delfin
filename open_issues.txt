# ah yes

- HIGH PRIORITY:
    -> create a dummy excel database to allow you to properly create the database fields inside your docx file
!!!

- multi-page docX documents might text shift onto a different page if $bypassDotODTstep uses its default true state
    -> the .docX file should use proper page breaks
        -> just use "clean and properly formatted" documents and common fonts
            -> also you should always test the document on yourself first  you dummy
- docx files with (ex. text boxes) with behind text floating anchors might format weirdly if the document spreads across multiple pages
    -> only happens if you disable the $bypassDotODTstep in functions.php
        -> just because it converted properly once, doesn't mean it will always work
- "big" images might break in the .pdf file
    -> use the attachement upload instead
        -> won't fix

- There is no storage space limiter implemented

- There is no memory limiter implemented

- Signature is slightly broken in outlook web under WebKit browsers.
    -> Suspect: Outlook probably has a default "hidden" stylesheet

- pdf combiner doesn't have a limiter
    -> out of memory errors (and out of storage) are possible

- there is no protection against a .docx document containing a zip bomb
    -> out of memory and out of storage errors possible

- manipulated .docx documents can cause the pdf file to become really really large
    -> out of memory, out of storage, mails failing to send, pdf combiner failing

- the Users table has a login id that is unused
    -> dual login possible; due to job lock flag, no crashes are possible

- job lock flag doesn't clear on full container restart if it has been set
    -> usually related to crashes

- the uploads and logs folders aren't protected against CRUD
    -> tons of crashes possible
-> also as it isn't a docker volume, you have to grant these 2 folders in the root of the project directory CRUD permissions on an actual Linux machine (case sensitive)

- the database and the assossciated php grabbing function don't have any limiter
    -> out of memory errors are possible, if you have a pretty large database

- no warning message if the list you've used is empty
    -> ...

- the db table header might be able to receive a really really long name
    -> out of memory errors ; file paths too long
        -> though you need db and code access to even change those values

- the email subject and email body forms don't have a size limit and isn't santized
    -> out of memory is possible (1MB text isn't enough) and you need specialized code to perhaps cause other damage

- the database tables have to be set up manually
    -> no proper error message when trying to log in

- composer needs to be installed on the host machine
    -> should be part of the dockerfile, though I struggle with that part

- "setasign/fpdf" is stuck on 1.8.2 in composer.json
    (1.8.3 1.8.4 1.8.5 1.8.6 at the time of writing are incompatible)
    -> those versions require a php extension to run and as composer is installed on the host machine...
        (-> a mess)

- the logs & uploads directory can be viewed by anyone (even non logged in strangers)
    -> someone who has the direct link (by sheer determination) can spy on the logs and even the personalized pdf documents

- the uploads and logs directory in functions.php may not run from root if functions.php is called with an include in a sub-directory
    -> yes you! that wants to add stuff! read this!

-






###

Patched Isses:

- if the selected list var is manipulated or uses path/reserved symbols
    -> a directory named after this exact var is created; and this can be ugly

-

